@use "global" as *;


.toggle {

}

.toggle.is-open .toggle__open-btn::after {  // 『.is-open』が付いた時は、縦線を90度回転。
  transform: translate(-50%, -50%) rotate(90deg);  // 『rotate』だけだと、元々指定していた『translate(-50%, -50%)』が無しになり『rotate』だけが適用されてしまうため『rotate』と『translate』の両方の記述が必要。また『translate』と『rotate』の順番も重要。逆にすると移動と回転の順番が逆になり結果が変わる。
}

.toggle:nth-of-type(n+2) {
  transition: margin-top 0.3s ease-out;
}

.toggle:nth-of-type(n+2).is-open {  // 並んでいるtoggleを両方開くと、間隔が少し変に見えるため、2個目以降のtoggleを開くときは、margin-topを付与。
  margin-top: rem(24);
}

.toggle__head {
  width: 100%;
  border-left: rem(5) solid $color-accent1;
  background: #EEE;
  padding-block: rem(5);
  padding-left: rem(19);
  padding-right: rem(8);

  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: rem(40);  // 最低限の余白を設定
}

.toggle__head-text {
  font-size: rem(14);
  font-weight: $medium;
  line-height: 1.8;
}

.toggle__open-btn {
  display: block;
  width: rem(9);
  height: rem(9);
  position: relative;
}

.toggle__open-btn::before,
.toggle__open-btn::after {  // 縦線と横線の共通の指定
  content: "";
  background-color: $color-accent1;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.toggle__open-btn::before {  // 横線
  width: rem(9);
  height: rem(1);
  min-height: rem(1);
  max-height: rem(1);
}

.toggle__open-btn::after {  // 縦線
  width: rem(1);
  max-width: rem(1);
  min-width: rem(1);
  height: rem(9);
  transition: transform 0.3s ease-out;
}

.toggle__body {
  display: none;  // 普段(最初)は「.qa-box__body」は閉じている仕様のため。
  margin-top: rem(15);
  padding-left: rem(16);
}

.toggle__text {
  font-size: rem(16);
  font-weight: $normal;
  line-height: 1.8;
}

.toggle__list-warp {
  margin-top: rem(26);
}

.toggle__list-title {
  font-size: rem(16);
  font-weight: $normal;
  line-height: 1.8;
}

.toggle__list {
  margin-left: rem(2);
}

.toggle__list2 {
  margin-top: rem(23);
}
